server.port=7065
spring.banner.location=classpath:${banner-name}
spring.jmx.default-domain=${spring.application.name}
application.version=${project.version}
spring.application.name=${server.name}

fiul.dataflow.data-life-tracker-fixed-delay=600000
fiul.dataflow.fi-data-crypto-service=${FI_DATA_CRYPTO_SERVICE:no-op}
## Start: notification config #################################################
# fiul.notification-queue-type={in-mem}
fiul.notification-queue-type=${NOTIFICATION_QUEUE_TYPE:in-mem}
# callback
fiul.notification.callback.webhook-client.qualifier=fiul-default
fiul.notification.callback.request.header=header-dummy
fiul.notification.callback.request.value=value-dummy
## End: notification config ###################################################

## Start: AAClientConfig ######################################################
#valid values = {generateIfNull,generateAuto,noop}
aa-client.request-timestamp-setter=generateAuto
aa-client.request-txn-id-setter=generateAuto
#set to false if you do not want to update FIRequest.Consent.DigitalSignature value automatically
aa-client.firequest-digital-sign-auto-update=true
aa-client.crypto-service=defaultCryptoService
aa-client.request-cache-service-name=in-mem
## End: AAClientConfig ########################################################

#Onemoney
aa-properties.onemoney.base-url=${ONE_MONEY_BASE_URL:https://api-sandbox.onemoney.in/aa}
aa-properties.onemoney.content-type=application/json
aa-properties.onemoney.client-api-key=${ONE_MONEY_CLIENT_APY_KEY:your-api-key}
aa-properties.onemoney.dataConsumer-id-setter=${ONE_MONEY_DATA_CONSUMER_ID:your-consumer-id}
#Finvu
aa-properties.finvu.base-url=${FINVU_BASE_URL:https://aauat.finvu.in/API/V1}
aa-properties.finvu.content-type=application/json
aa-properties.finvu.accept=application/json

## Start: MY-SQL-DB-CONFIGURATION #############################################
#spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/fiu_server}
#spring.datasource.username=${DB_USER:root}
#spring.datasource.password=${DB_PASSWORD:root}
#spring.datasource.driver-class-name=${DB_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}
#spring.jpa.properties.hibernate.dialect=${DB_DIALECT:org.hibernate.dialect.MySQL5InnoDBDialect}
## End: MY-SQL-DB-CONFIGURATION ###############################################
## Start: H2-DB-CONFIGURATION #################################################
#spring.datasource.url=${DB_URL:jdbc:h2:file:./data/testdb}
spring.datasource.url=${DB_URL:jdbc:h2:mem:devDb}
spring.datasource.driverClassName=${DB_DRIVER_CLASS_NAME:org.h2.Driver}
spring.datasource.username=${DB_USER:sa}
spring.datasource.password=${DB_PASSWORD:password}
spring.h2.console.enabled=${DB_ENABLE_H2_CONSOLE:true}
spring.h2.console.path=${DB_H2_CONSOLE_PATH:/console/}
spring.jpa.database-platform=${DB_DIALECT:org.hibernate.dialect.H2Dialect}
## End: H2-DB-CONFIGURATION ###################################################

# Start: Spring jpa properties ################################################
spring.datasource.initialization-mode=always
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Log JPA queries
# Comment this in production
#spring.jpa.show-sql=true
# Drop and create new tables (create, create-drop, validate, update)
# Comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# End: Spring jpa properties ##################################################

# Start: HIKARI properties ################################################
spring.datasource.hikari.connectionTimeout=${CP_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idleTimeout=${CP_IDLE_TIMEOUT:600000}
spring.datasource.hikari.maxLifetime=${CP_MAXLIFE_TIME:1800000}
spring.datasource.hikari.minimumIdle=${CP_MIN_IDLE:200}
spring.datasource.hikari.maximumPoolSize=${CP_MAX_POOLSIZE:200}
# End: HIKARI properties ##################################################

